apiVersion: v1
kind: ServiceAccount
metadata:
  name: openafs-csi-attacher
  # replace with non-default namespace name
  namespace: <NAMESPACE>

---
# Attacher must be able to work with PVs, CSINodes and VolumeAttachments
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openafs-csi-attacher
  namespace: <NAMESPACE>
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
#Secret permission is optional.
#Enable it if you need value from secret.
#For example, you have key `csi.storage.k8s.io/controller-publish-secret-name` in StorageClass.parameters
#see https://kubernetes-csi.github.io/docs/secrets-and-credentials.html
#  - apiGroups: [""]
#    resources: ["secrets"]
#    verbs: ["get", "list"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openafs-csi-attacher
  namespace: <NAMESPACE>
subjects:
  - kind: ServiceAccount
    name: openafs-csi-attacher
    # replace with non-default namespace name
    namespace: <NAMESPACE>
roleRef:
  kind: ClusterRole
  name: openafs-csi-attacher
  apiGroup: rbac.authorization.k8s.io
